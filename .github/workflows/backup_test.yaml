name: Test Database Backup Script

on:
  push:
    branches:
      - main   

jobs:
  backup:
    runs-on: ubuntu-latest

    env:
      OUTPUT_DIRECTORY: /tmp/OMERO/backup/database
      DATABASE: omero_database
      DATABASE_ADMIN: postgres
      CONTAINER_NAME: postgres_container
      DATE: $(date '+%Y-%m-%d')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-contrib

      - name: Start PostgreSQL service
        run: sudo service postgresql start
    
      - name: Set up database and user
        run: |
          cd /tmp
          sudo -u postgres psql -c "CREATE DATABASE $DATABASE;"
        env:
          DATABASE: ${{ env.DATABASE }}
          DATABASE_ADMIN: ${{ env.DATABASE_ADMIN }}

      - name: Verify database existence
        run: |
          cd /tmp
          DB_EXISTS=$(sudo -u postgres psql -tAc "SELECT 1 FROM pg_database WHERE datname='$DATABASE'")
          echo "Database exists: $DB_EXISTS"
          if [ "$DB_EXISTS" != "1" ]; then
            echo "Database $DATABASE does not exist. Exiting."
            exit 1
          fi
        env:
          DATABASE: omero_database
      
      - name: Check if pg_dump is installed
        run: |
          if ! command -v pg_dump &> /dev/null
          then
              echo "pg_dump could not be found"
              exit 1
          fi
        
      - name: Run backup script in normal mode
        run: |
          sudo cp scripts/database_backup.sh /tmp/database_backup.sh
          sudo cp scripts/.env /tmp/.env
          cd /tmp
          sudo chmod +x database_backup.sh
          sudo ./database_backup.sh

      - name: Verify backup files exist and list them
        run: 
          ls $OUTPUT_DIRECTORY/*.pg_dump
          
      - name: Install Docker
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker container for PostgreSQL
        run: |
          docker run -d --name $CONTAINER_NAME -e POSTGRES_DB=$DATABASE -e POSTGRES_USER=$DATABASE_ADMIN -e POSTGRES_PASSWORD=password -p 5433:5432 postgres:latest
          sleep 20 # Wait for the container to be ready
      
      - name: Print our current directory and list files
        run: |
          pwd
          ls

      - name: Run backup script in Docker mode
        run: |
          cd /tmp
          sudo database_backup.sh docker

      - name: Clean up Docker container
        run: docker stop $CONTAINER_NAME && docker rm $CONTAINER_NAME